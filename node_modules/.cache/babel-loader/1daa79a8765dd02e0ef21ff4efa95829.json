{"ast":null,"code":"import _objectSpread from \"/home/chhay/Project/Vue_Project/vue2_pos/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Spinner from '../../spinner/Spinner'; //import this ixin for use spinner\n\nimport Mixin from '../../../../helper/mixin.js'; //import this ixin for use spinner\n\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  components: {\n    Spinner: Spinner\n  },\n  mixins: [Mixin],\n  name: 'TableList',\n  data: function data() {\n    return {\n      tableID: '',\n      name: '',\n      search: ''\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('table', ['Alltables', 'Allerrors', 'Success'])), {}, {\n    searchFilter: function searchFilter() {\n      var _this = this;\n\n      return this.Alltables.filter(function (item) {\n        return item.name.toLowerCase().includes(_this.search.toLowerCase());\n      });\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions('table', ['getTables', 'updateTables', 'deleteTables'])), {}, {\n    Edit: function Edit(table) {\n      this.tableID = table.id;\n      this.name = table.name;\n    },\n    Update: function Update(tableID) {\n      var formData = new FormData();\n      formData.append('name', this.name);\n      formData.append('_method', 'PUT'); //in this route js can't understand put request so we have to use post request instead but make sure we append the formData with _'method':'PUT')\n\n      this.updateTables({\n        tableID: tableID,\n        formData: formData\n      });\n      this.showSpinner(); //to show spinnser we call showSpinner and hideSpinnser functions from mixin that we import above\n    },\n    Delete: function Delete(tableID) {\n      if (confirm(\"Are your sure want to delete this category?\")) {\n        this.deleteTables(tableID);\n        this.showSpinner(); //to show spinnser we call showSpinner and hideSpinnser functions from mixin that we import above\n      }\n    }\n  }),\n  mounted: function mounted() {\n    this.getTables(); //call this mehtod from ...mapActions if  we not mouted users will not found\n  } //     mounted(){\n  //        this.$store.dispatch( 'auth/getUsers'); // use this we dont use mapActions\n  //    }\n\n};","map":{"version":3,"sources":["TableList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,OAAA,OAAA,MAAA,uBAAA,C,CAAA;;AACA,OAAA,KAAA,MAAA,6BAAA,C,CAAA;;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,OAAA,EAAA;AAAA,GADA;AAEA,EAAA,MAAA,EAAA,CAAA,KAAA,CAFA;AAGA,EAAA,IAAA,EAAA,WAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA;AAHA,KAAA;AAKA,GAVA;AAWA,EAAA,QAAA,kCACA,UAAA,CAAA,OAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,SAAA,CAAA,CADA;AAEA,IAAA,YAFA,0BAEA;AAAA;;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AACA,eAAA,IAAA,CAAA,IAAA,CAAA,WAAA,GAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,WAAA,EAAA,CAAA;AACA,OAFA,CAAA;AAGA;AANA,IAXA;AAmBA,EAAA,OAAA,kCACA,UAAA,CAAA,OAAA,EAAA,CAAA,WAAA,EAAA,cAAA,EAAA,cAAA,CAAA,CADA;AAEA,IAAA,IAFA,gBAEA,KAFA,EAEA;AACA,WAAA,OAAA,GAAA,KAAA,CAAA,EAAA;AACA,WAAA,IAAA,GAAA,KAAA,CAAA,IAAA;AACA,KALA;AAMA,IAAA,MANA,kBAMA,OANA,EAMA;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,IAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,SAAA,EAAA,KAAA,EAHA,CAGA;;AACA,WAAA,YAAA,CAAA;AAAA,QAAA,OAAA,EAAA,OAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA;AACA,WAAA,WAAA,GALA,CAKA;AAEA,KAbA;AAcA,IAAA,MAdA,kBAcA,OAdA,EAcA;AACA,UAAA,OAAA,CAAA,6CAAA,CAAA,EAAA;AACA,aAAA,YAAA,CAAA,OAAA;AACA,aAAA,WAAA,GAFA,CAEA;AACA;AAEA;AApBA,IAnBA;AAyCA,EAAA,OAzCA,qBAyCA;AACA,SAAA,SAAA,GADA,CACA;AACA,GA3CA,CA4CA;AACA;AACA;;AA9CA,CAAA","sourcesContent":["<template>\n    <div>\n        <!-- whenever we use child route we have to add router-view to wrappe all parent component -->\n        <!-- and router-view plz see in layout/layout -->\n        <h5 class=\"title\">Table List <i class=\"fa fa-dashboard\"></i></h5>\n        <md-table  md-card v-if=\"this.Alltables.length>0\">\n            <md-table-toolbar>\n                <h1 class=\"md-title\">Table</h1>\n                <b-form-input v-model=\"search\" size=\"sm\" style=\"width:200px;margin-right:5px;\" class=\"\" placeholder=\"Search Table name...\"></b-form-input >\n                <router-link :to=\"{name:'CreateTable'}\"><button class=\"btn btn-secondary btn-sm text-right\"><i class=\"fas fa-plus\"></i> Add New Table</button></router-link>\n            </md-table-toolbar>\n\n            <md-table-row style=\"background-color:#ADD8E6;\">\n                <md-table-head>NO_</md-table-head>\n                <md-table-head>Table Name</md-table-head>\n                <md-table-head>Created</md-table-head>\n                <md-table-head>Updated</md-table-head>\n                <md-table-head>Action</md-table-head>\n            </md-table-row>\n\n            <md-table-row slot=\"md-table-row\" v-for=\"(table, index) in searchFilter\" :key=\"table.id\">\n                <md-table-cell >{{index+1}}</md-table-cell>\n                <md-table-cell >{{table.name}}</md-table-cell>\n                <md-table-cell >{{table.created_at | formatDate}}</md-table-cell>\n                <md-table-cell >{{table.updated_at | formatDate}}</md-table-cell>\n                <md-table-cell>\n\n                    <b-dropdown variant=\"outline-secondary\" size=\"sm\" :disabled=\"usertype === 'User'\" outline>\n                        <template #button-content><b-icon icon=\"gear-fill\" aria-hidden=\"true\"></b-icon> Settings</template>\n                        <b-dropdown-item-button variant=\"primary\"  v-b-modal.modal @click=\"Edit(table)\" title=\"Edit\" >\n                            <b-icon icon=\"file-earmark-medical\"></b-icon> Edit\n                        </b-dropdown-item-button>\n                        <b-dropdown-item-button variant=\"danger\" @click=\"Delete(table.id)\" title=\"Delete\" >\n                            <b-icon icon=\"trash-fill\" aria-hidden=\"true\"></b-icon> Delete\n                        </b-dropdown-item-button>\n                    </b-dropdown>\n\n                </md-table-cell>\n            </md-table-row>\n        </md-table>\n\n        <md-table md-card v-if=\"this.Alltables.length <= 0\">\n            <md-table-toolbar>\n                <h1 class=\"md-title\">No Table</h1><router-link :to=\"{name:'CreateTable'}\"><button class=\"btn btn-secondary btn-sm text-right\"><i class=\"fas fa-plus\"></i> Add New Table</button></router-link>\n            </md-table-toolbar>\n        </md-table>\n\n        <!-- =====================showign modal vue bootstrap for update user================== -->\n        <b-modal id=\"modal\" hide-footer title=\"Update Table\">\n            <b-alert show variant=\"success\" v-if=\"this.Success\">{{this.Success}}</b-alert>\n            <b-form @submit.prevent=\"Update(tableID)\">\n                <div>\n                    <label for=\"name\" class=\"mb-2\">Table Name</label>\n                    <b-form-input size=\"sm\" id=\"name\"  v-model=\"name\" type=\"text\" placeholder=\"New Table Name\"></b-form-input>\n                    <small class=\"text-danger\" v-if=\"this.Allerrors && this.Allerrors.name\">{{this.Allerrors.name[0]}}</small>  \n                </div>   \n                <b-button variant=\"primary\" size=\"sm\" type=\"submit\" style=\"width:fit-content;margin:10px;\">Update</b-button>\n            </b-form>\n        </b-modal>\n        <!-- ======================showing spinner========================= -->\n        <Spinner :active=\"spinnerActive\" text=\"Loading...\"></Spinner>\n    </div>\n</template>\n\n<script>\nimport Spinner from '../../spinner/Spinner'; //import this ixin for use spinner\nimport Mixin from '../../../../helper/mixin.js'; //import this ixin for use spinner\nimport {mapActions,mapGetters} from 'vuex';\nexport default {\n    components: {Spinner},\n    mixins: [Mixin],\n    name:'TableList',\n    data(){\n        return{\n            tableID: '',\n            name:'',\n            search:'',\n        }\n    },\n    computed:{\n        ...mapGetters('table',['Alltables','Allerrors','Success']),\n        searchFilter(){\n            return this.Alltables.filter((item) => {\n                return item.name.toLowerCase().includes(this.search.toLowerCase());\n            });\n        }\n    },\n    methods:{\n        ...mapActions('table',['getTables','updateTables','deleteTables']),\n        Edit(table){\n            this.tableID = table.id;\n            this.name = table.name;\n        },\n        Update(tableID){\n            let formData = new FormData();\n            formData.append('name',this.name);\n            formData.append('_method', 'PUT')  //in this route js can't understand put request so we have to use post request instead but make sure we append the formData with _'method':'PUT')\n            this.updateTables({tableID,formData})\n            this.showSpinner(); //to show spinnser we call showSpinner and hideSpinnser functions from mixin that we import above\n    \n        },\n        Delete(tableID){\n            if(confirm(\"Are your sure want to delete this category?\")){\n                this.deleteTables(tableID);\n                this.showSpinner(); //to show spinnser we call showSpinner and hideSpinnser functions from mixin that we import above\n            }\n            \n        }\n    },\n    mounted(){\n       this.getTables();   //call this mehtod from ...mapActions if  we not mouted users will not found\n    },\n        //     mounted(){\n        //        this.$store.dispatch( 'auth/getUsers'); // use this we dont use mapActions\n        //    }\n}\n</script>\n\n\n<style>\n\n</style>"],"sourceRoot":"src/components/ui/table"},"metadata":{},"sourceType":"module"}