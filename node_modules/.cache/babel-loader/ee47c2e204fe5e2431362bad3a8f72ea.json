{"ast":null,"code":"import http from '@/axiosAPI/axios.js';\nvar auth = {\n  namespaced: true,\n  state: {\n    Products: [],\n    Allproducts: [],\n    Errors: [],\n    Success: \"\"\n  },\n  getters: {\n    Allproducts: function Allproducts(state) {\n      return state.Products;\n    },\n    GetAllproducts: function GetAllproducts(state) {\n      return state.Allproducts;\n    },\n    Allerrors: function Allerrors(state) {\n      return state.Errors;\n    },\n    Success: function Success(state) {\n      return state.Success;\n    }\n  },\n  mutations: {\n    ADD_PRODUCT: function ADD_PRODUCT(state, formData) {\n      state.Products = formData;\n    },\n    UPDATE_PRODUCT: function UPDATE_PRODUCT(state, formData) {\n      state.Products = formData;\n    },\n    GET_PRODUCT: function GET_PRODUCT(state, product) {\n      state.Products = product;\n    },\n    GET_ALL_PRODUCT: function GET_ALL_PRODUCT(state, allproduct) {\n      state.Allproducts = allproduct;\n    },\n    GET_ERRORS: function GET_ERRORS(state, error) {\n      state.Errors = error;\n    },\n    SUCCESS: function SUCCESS(state, payload) {\n      state.Success = payload;\n    }\n  },\n  actions: {\n    addProduct: function addProduct(_ref, formData, config) {\n      var commit = _ref.commit;\n      http.post(\"/ui/product\", formData, config).then(function (response) {\n        if (response.data.status === 'success') {\n          commit(\"ADD_PRODUCT\", formData); //we have to commit data otherwise formData won't be pass to route \n\n          commit('SUCCESS', response.data.message);\n          setTimeout(function () {\n            window.location.reload();\n          }, 2000);\n        } else {\n          commit(\"GET_ERRORS\", response.data.message);\n        }\n      }).catch(function (error) {\n        if (error) {\n          commit(\"GET_ERRORS\", error.response.data.errors);\n          console.log(error.response);\n        }\n      });\n    },\n    getProduct: function getProduct(_ref2, page) {\n      var commit = _ref2.commit;\n      //this method is get product with pagiantion for dispaly in product list\n      http.get(\"/ui/product?page=\" + page).then(function (response) {\n        commit(\"GET_PRODUCT\", response.data);\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n    },\n    getAllProduct: function getAllProduct(_ref3) {\n      var commit = _ref3.commit;\n      //this method is get all product for display in pos\n      http.get(\"/ui/allproduct\").then(function (response) {\n        commit(\"GET_ALL_PRODUCT\", response.data);\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n    },\n    udpateProducts: function udpateProducts(_ref4, _ref5) {\n      var commit = _ref4.commit;\n      var productID = _ref5.productID,\n          formData = _ref5.formData,\n          config = _ref5.config;\n      http.post('/ui/product/' + productID, formData, config).then(function (response) {\n        if (response.data.status === 'success') {\n          commit(\"UPDATE_PRODUCT\", formData);\n          commit('SUCCESS', response.data.message);\n          setTimeout(function () {\n            window.location.reload(); //to reload page\n          }, 1500);\n        } else {\n          commit(\"GET_ERRORS\", response.data.message);\n        }\n      }).catch(function (error) {\n        if (error) {\n          commit(\"GET_ERRORS\", error.response.data.errors);\n          console.log(error.response);\n        }\n      });\n    },\n    deleteProducts: function deleteProducts(_ref6, productID) {\n      var commit = _ref6.commit;\n      http.delete(\"/ui/product/\" + productID).then(function (response) {\n        if (response.data.status === 'success') {\n          commit(\"SUCCESS\", response);\n          window.location.reload(); //to reload page\n        } else if (response.data.status === 'fail') {\n          commit(\"GET_ERRORS\", response.data.message);\n        }\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n    }\n  }\n};\nexport default auth;","map":{"version":3,"sources":["/home/chhay/Project/Vue_Project/vue2_pos/src/store/modules/product.js"],"names":["http","auth","namespaced","state","Products","Allproducts","Errors","Success","getters","GetAllproducts","Allerrors","mutations","ADD_PRODUCT","formData","UPDATE_PRODUCT","GET_PRODUCT","product","GET_ALL_PRODUCT","allproduct","GET_ERRORS","error","SUCCESS","payload","actions","addProduct","config","commit","post","then","response","data","status","message","setTimeout","window","location","reload","catch","errors","console","log","getProduct","page","get","getAllProduct","udpateProducts","productID","deleteProducts","delete"],"mappings":"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","sourcesContent":["\nimport http from '@/axiosAPI/axios.js';\n\nconst auth = {\n    namespaced: true,\n    state:{\n        Products: [],\n        Allproducts:[],\n        Errors: [],\n        Success:\"\",\n    },\n    getters:{\n        Allproducts(state){\n            return state.Products;\n        },\n        GetAllproducts(state){\n            return state.Allproducts;\n        },\n        Allerrors(state){\n            return state.Errors;\n        },\n        Success(state){\n            return state.Success;\n        },\n    },\n    mutations:{\n        ADD_PRODUCT(state,formData){\n            state.Products = formData;\n        },\n        UPDATE_PRODUCT(state,formData){\n            state.Products = formData; \n        },\n        GET_PRODUCT(state,product){\n            state.Products = product;\n        },\n        GET_ALL_PRODUCT(state,allproduct){\n            state.Allproducts = allproduct;\n        },\n        GET_ERRORS(state,error){\n            state.Errors = error;\n        },\n        SUCCESS(state,payload){\n            state.Success = payload;\n        },\n    },\n    actions:{\n        addProduct({commit},formData,config){\n            http.post(\"/ui/product\",formData,config).then((response)=>{\n                if(response.data.status ==='success'){\n                    commit(\"ADD_PRODUCT\",formData); //we have to commit data otherwise formData won't be pass to route \n                    commit('SUCCESS',response.data.message);\n                    setTimeout(function(){\n                        window.location.reload();\n                    },2000);\n                }else{\n                    commit(\"GET_ERRORS\",response.data.message);\n                }\n            })\n            .catch(error=>{\n                if(error){\n                    commit(\"GET_ERRORS\",error.response.data.errors);\n                    console.log(error.response)\n                }\n            })\n        },\n        getProduct({commit},page){ //this method is get product with pagiantion for dispaly in product list\n            http.get(\"/ui/product?page=\"+ page).then((response)=>{\n                commit(\"GET_PRODUCT\",response.data); \n            })\n            .catch((error)=>{ \n                console.log(error.response);\n            })\n        },\n        getAllProduct({commit}){ //this method is get all product for display in pos\n            http.get(\"/ui/allproduct\").then((response)=>{\n                commit(\"GET_ALL_PRODUCT\",response.data); \n            })\n            .catch((error)=>{ \n                console.log(error.response);\n            })\n        },\n        udpateProducts({commit},{productID,formData,config}){\n            http.post('/ui/product/'+productID, formData, config).then((response)=>{\n                if(response.data.status ==='success'){\n                    commit(\"UPDATE_PRODUCT\",formData);\n                    commit('SUCCESS',response.data.message);\n                    setTimeout(function(){\n                        window.location.reload(); //to reload page\n                    },1500);\n                }else{\n                    commit(\"GET_ERRORS\",response.data.message);\n                }\n            })\n            .catch((error)=>{\n                if(error){\n                    commit(\"GET_ERRORS\",error.response.data.errors);\n                    console.log(error.response);\n                }\n            });\n        },\n        deleteProducts({commit},productID){\n            http.delete(\"/ui/product/\"+productID).then((response)=>{\n                if(response.data.status === 'success'){\n                    commit(\"SUCCESS\",response);\n                    window.location.reload(); //to reload page\n                }\n                else if(response.data.status ==='fail'){\n                    commit(\"GET_ERRORS\",response.data.message);\n                }\n            })\n            .catch((error)=>{\n                console.log(error.response);\n            });\n        },\n    },\n}\n\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}