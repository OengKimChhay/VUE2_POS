{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport http from '@/axiosAPI/axios.js';\nimport router from '@/route/index';\nvar auth = {\n  namespaced: true,\n  state: {\n    Users: [],\n    Errors: [],\n    Success: \"\",\n    Loginerror: \"\",\n    Token: localStorage.getItem('access_token') || null //false is for to check if user not login will redirect to login route\n\n  },\n  getters: {\n    Allusers: function Allusers(state) {\n      return state.Users;\n    },\n    Allerrors: function Allerrors(state) {\n      return state.Errors;\n    },\n    Success: function Success(state) {\n      return state.Success;\n    },\n    Loginerrors: function Loginerrors(state) {\n      return state.Loginerror;\n    },\n    loggedIn: function loggedIn(state) {\n      return state.Token !== null;\n    }\n  },\n  mutations: {\n    ADD_USER: function ADD_USER(state, formData) {\n      state.Users = formData;\n    },\n    UPDATE_USERS: function UPDATE_USERS(state, formData) {\n      state.Users = formData;\n    },\n    GET_USERS: function GET_USERS(state, payload) {\n      state.Users = payload;\n    },\n    GET_ERRORS: function GET_ERRORS(state, error) {\n      state.Errors = error;\n    },\n    SUCCESS: function SUCCESS(state, payload) {\n      state.Success = payload;\n    },\n    LOGIN_ERROR: function LOGIN_ERROR(state, erro) {\n      state.Loginerror = erro;\n    },\n    AUTH: function AUTH(state, token) {\n      state.Token = token;\n    },\n    UNAUTH: function UNAUTH(state) {\n      state.Token = null;\n    }\n  },\n  actions: {\n    addUsers: function addUsers(_ref, formData, config) {\n      var commit = _ref.commit,\n          state = _ref.state;\n      http.post(\"/register\", formData, config).then(function (response) {\n        if (response.data.status === 'success') {\n          commit(\"ADD_USER\", formData); //we have to commit data otherwise formData won't be pass to route \n\n          state.Errors = \"\";\n          commit('SUCCESS', response.data.message);\n          setTimeout(function () {\n            window.location.reload();\n          }, 2000);\n        } else {\n          commit(\"GET_ERRORS\", response.data.message);\n        }\n      }).catch(function (error) {\n        if (error) {\n          commit(\"GET_ERRORS\", error.response.data.errors);\n        }\n      });\n    },\n    getUsers: function getUsers(_ref2) {\n      var commit = _ref2.commit;\n      http.get(\"/auth/GetUserData\").then(function (response) {\n        commit(\"GET_USERS\", response.data); //.data mean we use ->paginate() from api so we must use .data\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n    },\n    udpateUsers: function udpateUsers(_ref3, _ref4) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      var userID = _ref4.userID,\n          formData = _ref4.formData,\n          config = _ref4.config;\n      http.post(\"/auth/update/\" + userID, formData, config).then(function (response) {\n        if (response.data.status === 'success') {\n          state.Errors = \"\";\n          commit(\"UPDATE_USERS\", formData);\n          commit('SUCCESS', response.data.message);\n          setTimeout(function () {\n            window.location.reload(); //to reload page\n          }, 2000);\n        } else {\n          commit(\"GET_ERRORS\", response.data.message);\n        }\n      }).catch(function (error) {\n        if (error) {\n          commit(\"GET_ERRORS\", error.response.data.errors);\n        }\n      });\n    },\n    loginUser: function loginUser(_ref5, formData) {\n      var commit = _ref5.commit;\n      http.post(\"/login\", formData).then(function (response) {\n        if (response.data.status === 'success') {\n          //set token\n          var token = response.data.token;\n          localStorage.setItem('access_token', token);\n          localStorage.setItem('username', response.data.user.name);\n          localStorage.setItem('usertype', response.data.user.userType);\n          localStorage.setItem('userimage', response.data.user.image);\n          console.log();\n          commit('AUTH', token);\n          router.push({\n            name: 'Dashboard'\n          });\n          router.go();\n        } else {\n          commit(\"LOGIN_ERROR\", response.data.message);\n        }\n      }).catch(function (error) {\n        if (error) {\n          commit('UNAUTH');\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user');\n          commit(\"GET_ERRORS\", error.response.data.errors);\n        }\n      });\n    },\n    logoutUser: function logoutUser(_ref6) {\n      var commit = _ref6.commit;\n      http.post(\"/auth/logout\").then(function (response) {\n        if (response.data.status === \"success\") {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('username');\n          localStorage.removeItem('usertype');\n          localStorage.removeItem('userimage');\n          commit('UNAUTH');\n          router.push({\n            name: 'Login'\n          });\n          window.location.reload();\n        } else {\n          commit(\"LOGIN_ERROR\", response.data.message);\n        }\n      }).catch(function (error) {\n        if (error) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user');\n          commit('UNAUTH');\n          commit(\"GET_ERRORS\", error.response.data.errors);\n        }\n      });\n    },\n    deleteUsers: function deleteUsers(_ref7, userID) {\n      var commit = _ref7.commit,\n          state = _ref7.state;\n      http.delete(\"/auth/delete/\" + userID).then(function (response) {\n        if (response.data.status === 'success') {\n          state.Errors = \"\";\n          commit(\"SUCCESS\", response);\n          router.go(); //to reload page\n        } else if (response.data.status === 'fail') {\n          commit(\"GET_ERRORS\", response.data.message);\n        }\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n    }\n  }\n};\nexport default auth;","map":{"version":3,"sources":["/home/chhay/Project/Vuvejs2/src/store/modules/auth.js"],"names":["http","router","auth","namespaced","state","Users","Errors","Success","Loginerror","Token","localStorage","getItem","getters","Allusers","Allerrors","Loginerrors","loggedIn","mutations","ADD_USER","formData","UPDATE_USERS","GET_USERS","payload","GET_ERRORS","error","SUCCESS","LOGIN_ERROR","erro","AUTH","token","UNAUTH","actions","addUsers","config","commit","post","then","response","data","status","message","setTimeout","window","location","reload","catch","errors","getUsers","get","console","log","udpateUsers","userID","loginUser","setItem","user","name","userType","image","push","go","removeItem","logoutUser","deleteUsers","delete"],"mappings":"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","sourcesContent":["\nimport http from '@/axiosAPI/axios.js';\nimport router from '@/route/index';\n\nconst auth = {\n    namespaced: true,\n    state:{\n        Users: [],\n        Errors: [],\n        Success:\"\",\n        Loginerror:\"\",\n        Token: localStorage.getItem('access_token') || null, //false is for to check if user not login will redirect to login route\n    },\n    getters:{\n        Allusers(state){\n            return state.Users;\n        },\n        Allerrors(state){\n            return state.Errors;\n        },\n        Success(state){\n            return state.Success;\n        },\n        Loginerrors(state){\n            return state.Loginerror;\n        },\n        loggedIn(state){\n            return state.Token !== null;\n        }\n    },\n    mutations:{\n        ADD_USER(state,formData){\n            state.Users = formData;\n        },\n        UPDATE_USERS(state,formData){\n            state.Users = formData;\n        },\n        GET_USERS(state,payload){\n            state.Users = payload;\n        },\n        GET_ERRORS(state,error){\n            state.Errors = error;\n        },\n        SUCCESS(state,payload){\n            state.Success = payload;\n        },\n        LOGIN_ERROR(state,erro){\n            state.Loginerror = erro;\n        },\n        AUTH(state,token){\n            state.Token = token;\n        },\n        UNAUTH(state){\n            state.Token = null;\n        }\n    },\n    actions:{\n        addUsers({commit,state},formData,config){\n            http.post(\"/register\",formData,config).then((response)=>{\n                if(response.data.status ==='success'){\n                    commit(\"ADD_USER\",formData); //we have to commit data otherwise formData won't be pass to route \n                    state.Errors=\"\";\n                    commit('SUCCESS',response.data.message);\n                    setTimeout(function(){\n                        window.location.reload();\n                    },2000);\n                }else{\n                    commit(\"GET_ERRORS\",response.data.message);\n                }\n            })\n            .catch(error=>{\n                if(error){\n                    commit(\"GET_ERRORS\",error.response.data.errors);\n                }\n            })\n        },\n        getUsers({commit}){\n            http.get(\"/auth/GetUserData\").then((response)=>{\n                commit(\"GET_USERS\",response.data); //.data mean we use ->paginate() from api so we must use .data\n            })\n            .catch((error)=>{\n                console.log(error.response);\n            })\n        },\n        udpateUsers({commit,state}, {userID, formData, config}){\n            http.post(\"/auth/update/\"+userID, formData, config).then((response)=>{\n                if(response.data.status ==='success'){\n                    state.Errors=\"\";\n                    commit(\"UPDATE_USERS\",formData);\n                    commit('SUCCESS',response.data.message);\n                    setTimeout(function(){\n                        window.location.reload(); //to reload page\n                    },2000);\n                }else{\n                    commit(\"GET_ERRORS\",response.data.message);\n                }\n            })\n            .catch((error)=>{\n                if(error){\n                    commit(\"GET_ERRORS\",error.response.data.errors);\n                }\n            })\n        },\n        loginUser({commit}, formData){\n            http.post(\"/login\",formData).then((response)=>{\n                if(response.data.status === 'success'){\n                    //set token\n                    const token = response.data.token;\n                    localStorage.setItem('access_token',token);\n                    localStorage.setItem('username',response.data.user.name);\n                    localStorage.setItem('usertype',response.data.user.userType);\n                    localStorage.setItem('userimage',response.data.user.image);\n                    console.log()\n                    commit('AUTH',token); \n                    router.push({name:'Dashboard'});\n                    router.go();\n                }else{\n                    commit(\"LOGIN_ERROR\",response.data.message);\n                }\n            })\n            .catch((error)=>{\n                if(error){\n                    commit('UNAUTH');\n                    localStorage.removeItem('access_token');\n                    localStorage.removeItem('user');\n                    commit(\"GET_ERRORS\",error.response.data.errors);\n                }\n            });\n        },\n        logoutUser({commit}){\n                http.post(\"/auth/logout\").then((response)=>{\n                    if(response.data.status === \"success\"){\n                        localStorage.removeItem('access_token');\n                        localStorage.removeItem('username');\n                        localStorage.removeItem('usertype');\n                        localStorage.removeItem('userimage');\n                        commit('UNAUTH');\n                        router.push({name:'Login'});\n                        window.location.reload();\n                    }else{\n                        commit(\"LOGIN_ERROR\",response.data.message);\n                    }\n                })\n                .catch((error)=>{\n                    if(error){\n                        localStorage.removeItem('access_token');\n                        localStorage.removeItem('user');\n                        commit('UNAUTH');\n                        commit(\"GET_ERRORS\",error.response.data.errors);\n                    }\n                });\n        },\n        deleteUsers({commit,state},userID){\n            http.delete(\"/auth/delete/\"+userID).then((response)=>{\n                if(response.data.status === 'success'){\n                    state.Errors=\"\";\n                    commit(\"SUCCESS\",response);\n                    router.go(); //to reload page\n                }\n                else if(response.data.status ==='fail'){\n                    commit(\"GET_ERRORS\",response.data.message);\n                }\n            })\n            .catch((error)=>{\n                console.log(error.response);\n            });\n        }\n    },\n}\n\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}