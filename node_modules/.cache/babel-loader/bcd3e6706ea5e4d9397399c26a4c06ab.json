{"ast":null,"code":"import _objectSpread from \"/home/chhay/Project/Vue_Project/vue2_pos/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Spinner from '../../spinner/Spinner.vue'; //import this ixin for use spinner\n\nimport Mixin from '../../../../helper/mixin.js'; //import this ixin for use spinner\n\nimport Pagination from '../../pagination/paginate.vue.vue';\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  components: {\n    Spinner: Spinner,\n    Pagination: Pagination\n  },\n  mixins: [Mixin],\n  data: function data() {\n    return {\n      page: 1,\n      editProduct: {\n        id: \"\",\n        new_product_name: \"\",\n        new_unitprice: \"\",\n        new_category_id: \"\",\n        new_image: \"\"\n      },\n      preview: \"\",\n      search: \"\"\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters('product', ['Allproducts', 'Success', 'Allerrors'])), mapGetters('category', ['Allcategoires'])), {}, {\n    searchProduct: function searchProduct() {\n      var _this = this;\n\n      return this.Allproducts.data.filter(function (item) {\n        //.data mean we use ->paginate() from api so we must use .data appent to response.data -->\n        return item.product_name.toLowerCase().includes(_this.search.toLowerCase());\n      });\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('product', ['getProduct', 'udpateProducts', 'deleteProducts'])), mapActions('category', ['getCategoies'])), {}, {\n    Edit: function Edit(productID) {\n      var secificProduct = this.Allproducts.data.find(function (product) {\n        return product.id === productID;\n      }); //to get old value of data to show when user click edit\n\n      this.editProduct.id = secificProduct.id;\n      this.editProduct.new_product_name = secificProduct.product_name;\n      this.editProduct.new_unitprice = secificProduct.unitprice;\n      this.editProduct.new_category_id = secificProduct.category_id;\n      this.editProduct.new_image = secificProduct.image;\n    },\n    Update: function Update(productID) {\n      var formData = new FormData();\n      formData.append('new_product_name', this.editProduct.new_product_name);\n      formData.append('new_category_id', this.editProduct.new_category_id);\n      formData.append('new_unitprice', this.editProduct.new_unitprice);\n      formData.append('new_image', this.editProduct.new_image);\n      formData.append('_method', 'PUT'); //in this route js can't understand put request so we have to use post request instead but make sure we append the formData with _'method':'PUT')\n\n      var config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      this.udpateProducts({\n        productID: productID,\n        formData: formData,\n        config: config\n      }); // use this if we dont use mapAction this.$store.dispatch('auth/udpateUsers',{userID,formData,config})           \n\n      this.showSpinner();\n    },\n    Delete: function Delete(productID) {\n      if (confirm(\"Are your sure want to delete this product?\")) {\n        this.deleteProducts(productID);\n        this.showSpinner(); //to show spinnser we call showSpinner and hideSpinnser functions from mixin that we import above\n      }\n    },\n    processFile: function processFile(event) {\n      this.editProduct.new_image = event.target.files[0];\n      this.preview = URL.createObjectURL(this.editProduct.new_image);\n    },\n    nextPage: function nextPage() {\n      if (this.page >= this.Allproducts.last_page) {\n        // .last_page is getting from laravel api\n        this.page = this.Allproducts.last_page;\n        this.getProduct(this.page); // this.getProduct(this.page) getProduct function has payload pls see product.js in store\n      } else {\n        this.page += 1;\n        this.getProduct(this.page); // this.getProduct(this.page) getProduct function has payload pls see product.js in store\n      }\n    },\n    prePage: function prePage() {\n      if (this.page <= 1) {\n        this.page = 1;\n        this.getProduct(this.page);\n      } else {\n        this.page -= 1;\n        this.getProduct(this.page);\n      }\n    },\n    pageNumber: function pageNumber(num) {\n      if (num <= 1) {\n        this.page = 1;\n        this.getProduct(this.page);\n      } else if (num >= this.Allproducts.last_page) {\n        this.page = this.Allproducts.last_page;\n        this.getProduct(this.page);\n      } else {\n        this.page = num;\n        this.getProduct(this.page);\n      }\n    }\n  }),\n  mounted: function mounted() {\n    this.getProduct();\n    this.getCategoies();\n  } //mounted(){this.$store.dispatch( 'auth/getUsers'); // use this we dont use mapActions}\n\n};","map":{"version":3,"sources":["ProductList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <!-- whenever we use child route we have to add router-view to wrappe all parent component -->\n        <!-- and router-view plz see in layout/layout -->\n        \n        <h5 class=\"title\">Product List <i class=\"fa fa-users\"></i></h5>\n        <md-table  md-card v-if=\"this.Allproducts.total > 0\"> <!--//.data mean we use ->paginate() from api so we must use .data appent to response.data -->\n            <md-table-toolbar>\n                <h1 class=\"md-title\">Product: {{this.Allproducts.total}}</h1> <!-- .total is getting from laravel pagination api-->\n                <b-form-input v-model=\"search\"  size=\"sm\" style=\"width:200px;margin-right:5px;\" class=\"\" placeholder=\"Search product name...\"></b-form-input >\n                <router-link :to=\"{name:'CreateProduct'}\"><button class=\"btn btn-secondary btn-sm text-right\"><i class=\"fas fa-plus\"></i> Add New Product</button></router-link>\n            </md-table-toolbar>\n            <md-table-row style=\"background-color:#ADD8E6;\">\n                <md-table-head md-numeric>NO_</md-table-head>\n                <md-table-head>Product Img</md-table-head>\n                <md-table-head>Product Name</md-table-head>\n                <md-table-head>Unit Price</md-table-head>\n                <md-table-head>Category</md-table-head>\n                <md-table-head>Created</md-table-head>\n                <md-table-head>Updated</md-table-head>\n                <md-table-head>Action</md-table-head>\n            </md-table-row>\n\n            <md-table-row slot=\"md-table-row\" v-for=\"(product, index) in searchProduct \" :key=\"product.id\">\n                <md-table-cell md-numeric>{{index+1}}</md-table-cell>\n                <md-table-cell><img class=\"img\" :src=\"ImageURL+'/product/'+product.image\" alt=\"photo\"></md-table-cell>\n                <md-table-cell>{{product.product_name | capitaLize}}</md-table-cell>\n                <md-table-cell>{{product.unitprice | toCurrency}}</md-table-cell>\n                <md-table-cell>\n                    <div v-for=\"cat in Allcategoires\" :key=\"cat.id\">\n                        <div  v-if=\"cat.id == product.category_id\">{{cat.category_name | capitaLize}}</div>\n                    </div>\n                </md-table-cell>\n                <md-table-cell>{{ product.created_at | formatDate }}</md-table-cell> <!-- formatDate is a custom filter in main.js root -->\n                <md-table-cell>{{ product.updated_at | formatDate }}</md-table-cell> <!-- formatDate is a custom filter in main.js root -->\n                <md-table-cell>\n\n                    <b-dropdown variant=\"outline-secondary\" size=\"sm\" :disabled=\"usertype === 'User'\">\n                        <template #button-content><b-icon icon=\"gear-fill\" aria-hidden=\"true\"></b-icon> Settings</template>\n                        <b-dropdown-item-button variant=\"primary\" @click=\"Edit(product.id)\" v-b-modal.modal title=\"Edit\" >\n                            <b-icon icon=\"file-earmark-medical\"></b-icon> Edit\n                        </b-dropdown-item-button>\n                        <b-dropdown-item-button variant=\"danger\" @click=\"Delete(product.id)\" title=\"Delete\" >\n                            <b-icon icon=\"trash-fill\" aria-hidden=\"true\"></b-icon> Delete\n                        </b-dropdown-item-button>\n                    </b-dropdown>\n\n                </md-table-cell>\n            </md-table-row>\n            <md-table-row v-if=\"this.searchProduct.length <=0\">\n                <h5 class=\"m-2 text-center\">No Product.</h5>\n            </md-table-row>\n        </md-table>\n    <!-- pagination -->\n    <Pagination :page=\"page\" :current_page=\"this.Allproducts.current_page\" :last_page=\"this.Allproducts.last_page\" :getitemFuction=\"this.getProduct()\"></Pagination>\n        <div class=\"m-5 d-flex justify-content-around align-items-center\">\n            <div> \n                <!-- .total and .per_page are getting from laravel api -->\n                <b-button style=\"margin-right:10px;\" pill variant=\"outline-primary\" size=\"sm\" @click=\"prePage\"><b-icon icon=\"chevron-double-left\"></b-icon>Previouse</b-button>\n                <b-button pill variant=\"outline-primary\" size=\"sm\" @click=\"nextPage\">Next<b-icon icon=\"chevron-double-right\"></b-icon></b-button>\n            </div>\n            <!-- inter page num go to specify page -->\n            <div>\n                <b-form-input @input=\"pageNumber\" type=\"number\" min=\"1\" size=\"sm\" placeholder=\"Enter Page Num\" title=\"Enter page number you prefer to\"></b-form-input>\n            </div>\n            <div>\n                <p style=\"margin: 0;font-size: 12px;color: #606060;\">Page {{this.Allproducts.current_page}} of {{this.Allproducts.last_page}}</p>\n            </div>\n        </div>\n    <!-- end pagination -->\n        <md-table md-card v-if=\"this.Allproducts.total <=0\"> <!--//.total mean we use ->paginate() from api -->\n            <md-table-toolbar>\n                <h1 class=\"md-title\">No Product</h1><router-link :to=\"{name:'CreateProduct'}\"><button class=\"btn btn-secondary btn-sm text-right\">Add New Product</button></router-link>\n            </md-table-toolbar>\n        </md-table>\n\n<!-- =====================showign modal vue bootstrap for update user================== -->\n        <b-modal id=\"modal\" hide-footer title=\"Update Product\">\n            <b-alert show variant=\"success\" v-if=\"this.Success\">{{this.Success}}</b-alert>\n            <b-form  @submit.prevent=\"Update(editProduct.id)\">\n                <div class=\"row\">\n                    <div class=\"mb-3 col-lg-6 col-sm-12\">\n                        <label for=\"product_name\" class=\"mb-2\">New Product Name</label>\n                        <b-form-input size=\"sm\" id=\"product_name\"  v-model=\"editProduct.new_product_name\" type=\"text\" placeholder=\"New Product Name\"></b-form-input>\n                        <small class=\"text-danger\" v-if=\"this.Allerrors && this.Allerrors.new_product_name\">{{this.Allerrors.new_product_name[0]}}</small>\n                    </div>\n                    <div class=\"mb-3 col-lg-6 col-sm-12\">\n                        <label for=\"usertype\" class=\"mb-2\">New Category</label>\n                        <select v-model=\"editProduct.new_category_id\" class=\"form-select form-select-sm\">\n                            <option v-for=\"category in this.Allcategoires\" :key=\"category.id\" :value=\"category.id\" :selected=\"category.id == editProduct.new_category_id\">{{category.category_name}}</option>\n                        </select>\n                        <small class=\"text-danger\" v-if=\"this.Allerrors && this.Allerrors.new_category_id\">{{this.Allerrors.new_category_id[0]}}</small>\n                    </div>\n                    <div class=\"mb-3 col-lg-6 col-sm-12\">\n                        <label for=\"unitprice\" class=\"mb-2\">New Unit Price ($)</label>\n                        <b-form-input id=\"unitprice\" size=\"sm\" type=\"text\" v-model=\"editProduct.new_unitprice\"></b-form-input>\n                        <small class=\"text-danger\" v-if=\"this.Allerrors && this.Allerrors.new_unitprice\">{{this.Allerrors.new_unitprice[0]}}</small>\n                    </div>\n                    <div class=\"mb-3 col-lg-6 col-sm-12\">\n                        <label for=\"image\" class=\"mb-2\">New Image</label>\n                        <input @change=\"processFile\" id=\"image\" class=\"form-control form-control-sm\" type=\"file\">\n                        <small class=\"text-danger\" v-if=\"this.Allerrors && this.Allerrors.new_image\">{{this.Allerrors.new_image[0]}}</small>\n                    </div>\n                    <div class=\"d-flex justify-content-start\">\n                        <div id=\"previewImg\">\n                            <img class=\"preview\" v-if=\"preview\" :src=\"preview\" alt=\"\">\n                            <img class=\"preview\" v-else :src=\"ImageURL+'/product/'+editProduct.new_image\" alt=\"\">\n                        </div>\n                    </div>\n                    <b-button :disabled=\"usertype === 'User'\" variant=\"primary\" size=\"sm\" type=\"submit\" style=\"width:fit-content;margin:10px;\">Update</b-button>\n                </div>\n            </b-form>\n        </b-modal>\n<!-- ======================showing spinner========================= -->\n        <Spinner :active=\"spinnerActive\" text=\"Loading...\"></Spinner>\n    </div>\n</template>\n\n<script>\nimport Spinner from '../../spinner/Spinner.vue'; //import this ixin for use spinner\nimport Mixin from '../../../../helper/mixin.js'; //import this ixin for use spinner\nimport Pagination from '../../pagination/paginate.vue.vue';\nimport {mapActions,mapGetters} from 'vuex';\nexport default {\n    components: {Spinner,Pagination},\n    mixins: [Mixin],\n    data(){\n        return{\n            page:1,\n            editProduct:{\n                id:\"\",\n                new_product_name:\"\",\n                new_unitprice:\"\",\n                new_category_id:\"\",\n                new_image:\"\",\n            },\n            preview: \"\",\n            search:\"\",\n        }\n    },\n    computed:{\n        ...mapGetters('product',['Allproducts','Success','Allerrors']),\n        ...mapGetters('category',['Allcategoires']),\n        searchProduct(){\n            return this.Allproducts.data.filter((item) => { //.data mean we use ->paginate() from api so we must use .data appent to response.data -->\n                return item.product_name.toLowerCase().includes(this.search.toLowerCase());\n            });\n        }\n    },\n    methods:{\n        ...mapActions('product',['getProduct','udpateProducts','deleteProducts']),\n        ...mapActions('category',['getCategoies']),\n        Edit(productID){\n            const secificProduct = this.Allproducts.data.find(product=> product.id === productID); //to get old value of data to show when user click edit\n            this.editProduct.id = secificProduct.id;\n            this.editProduct.new_product_name = secificProduct.product_name;\n            this.editProduct.new_unitprice= secificProduct.unitprice;\n            this.editProduct.new_category_id = secificProduct.category_id;\n            this.editProduct.new_image = secificProduct.image;\n        },\n        Update(productID){\n            let formData = new FormData();\n            formData.append('new_product_name',this.editProduct.new_product_name);\n            formData.append('new_category_id',this.editProduct.new_category_id);\n            formData.append('new_unitprice',this.editProduct.new_unitprice);\n            formData.append('new_image',this.editProduct.new_image);\n            formData.append('_method', 'PUT')  //in this route js can't understand put request so we have to use post request instead but make sure we append the formData with _'method':'PUT')\n            let config = {\n                headers:{\n                    'Content-Type': 'multipart/form-data',         \n                }        \n            }\n            this.udpateProducts({productID,formData,config});    // use this if we dont use mapAction this.$store.dispatch('auth/udpateUsers',{userID,formData,config})           \n            this.showSpinner(); \n        },\n        Delete(productID){\n            if(confirm(\"Are your sure want to delete this product?\")){\n                this.deleteProducts(productID);\n                this.showSpinner(); //to show spinnser we call showSpinner and hideSpinnser functions from mixin that we import above\n            }\n        },\n        processFile(event) {\n            this.editProduct.new_image = event.target.files[0];\n            this.preview = URL.createObjectURL(this.editProduct.new_image);\n        },\n        nextPage(){\n            if(this.page >= this.Allproducts.last_page ){\n                // .last_page is getting from laravel api\n                this.page = this.Allproducts.last_page;\n                this.getProduct(this.page); // this.getProduct(this.page) getProduct function has payload pls see product.js in store\n            }else{\n                this.page+=1;\n                this.getProduct(this.page); // this.getProduct(this.page) getProduct function has payload pls see product.js in store\n            }\n        },\n        prePage(){\n            if(this.page <=1){\n                this.page = 1;\n                this.getProduct(this.page);\n            }else{\n                this.page-=1;\n                this.getProduct(this.page);\n            }\n        },\n        pageNumber(num){\n            if(num <=1){\n                this.page = 1;\n                this.getProduct(this.page);\n            }else if(num >= this.Allproducts.last_page){\n                this.page = this.Allproducts.last_page;\n                this.getProduct(this.page);\n            }else{\n                this.page = num;\n                this.getProduct(this.page);\n            }\n        }\n    },\n    mounted(){ \n        this.getProduct();\n        this.getCategoies();\n    },\n\n    //mounted(){this.$store.dispatch( 'auth/getUsers'); // use this we dont use mapActions}\n}\n</script>\n\n<style>\n#preview{\n    width: 70%;\n}\n.preview{\n    width: 100%;\n}\n.img{\n    width: 60px;\n}\n.title{\n    padding: 20px 0;\n}\n</style>"],"sourceRoot":"src/components/ui/product"},"metadata":{},"sourceType":"module"}